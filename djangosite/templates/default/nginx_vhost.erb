limit_req_zone $binary_remote_addr zone=<%= node.djangosite.name %>_all_per_ip:256k rate=15r/s;
limit_req_zone $binary_remote_addr zone=<%= node.djangosite.name %>_django_per_ip:256k rate=1r/s;

server {
    server_name  <% node.djangosite.domains.each do |domain| %> <%= domain %><% end %>;

    set $proj    <%= node.djangosite.name %>;
    <% if @node.djangosite.package %>set $package <%= node.djangosite.package %>;<% end %>

    access_log   /var/log/nginx/<%= node.djangosite.name %>.access.log;
    error_log    /var/log/nginx/<%= node.djangosite.name %>.error.log;

    set $proj_root /home/$proj/project;
    if ($package = ""){
        set $package $proj;
    }
    set $django_proj_root $proj_root/$package;
    set $media_root       $django_proj_root/media;

    root   $media_root;
    listen 80;

    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;
    limit_req zone=<%= node.djangosite.name %>_all_per_ip burst=15 nodelay;

    # we have no fancy stuff in django projects yet
    if ($request_method !~ ^(POST|PUT|GET|HEAD)$){
        return 444;
    }

    # hack: we return 418 in any place where request should be passed to django
    error_page 418 = @django;
    # set here because overriding this only in named location does not seem to.
    # work
    client_max_body_size <%= node.djangosite.client_max_body_size %>;

    # TODO: how to avoid this non-DRY block?
    # Named location to use as a fallback in try_files directives only.
    # (currently used only for robots/sitemap)
    location @django {
        keepalive_timeout  0;
        limit_req          zone=<%= node.djangosite.name %>_django_per_ip burst=3 nodelay;
        uwsgi_read_timeout 30;
        uwsgi_send_timeout 10;
        include            uwsgi_params;
        uwsgi_pass         unix:$proj_root/tmp/uwsgi.sock;
    }

    location / {
        # Pass all POST requests right to django:
        if ($request_method = POST) {
            return 418;
        }
        <% if node['djangosite']['cache']['enabled'] -%>
        root $media_root/cache/fresh;
        <% if node['djangosite']['cache']['anonymous_only'] -%>
        # this expects 'sessionid' cookie to be explicitly removed on user logout!
        if ($cookie_sessionid){
            return 418;
        }
        <% end -%>
        if ($http_x_requested_with = XMLHttpRequest) {
            set $is_ajax ",ajax";
        }
        if (-f $request_filename/${lang_prefix}index.html%3F$args$is_ajax) {
            rewrite (.*) /cache/fresh/$1/${lang_prefix}index.html%3F$args$is_ajax last;
        }
        <% end -%>
        return 418;
    }

    <% if node['djangosite']['cache']['enabled'] -%>
    # staticgenerator cache location.
    # root is inherited from server and is at $media_root.
    location /cache/fresh/ {
        internal;
        default_type text/html;
        gzip_static  on;
        expires      <%= node.djangosite.cache.expires %>;
        add_header   X-Cache-Hit true;
    }
    <% end -%>

    # not the best solution:
    # dumb rss readers expect to find the icon in the request root,
    # also makes some browsers searching for icon on site root happy.
    location ~* ^.+favicon\.(ico|png)$ {
        rewrite     ^.+(favicon\.(ico|png))$ /static/img/$1 break;
        access_log  off;
    }

    # keep in mind server root is 'projectname/media/':
    # - first try to read file 'media/uploads/$uri', (uploaded by user)
    # - then 'media/$uri', (handled by git)
    # - fallback passing the same '$uri' to django
    location ~* ^/(robots.txt|sitemap.xml)$ {
        access_log  off;
        try_files   /uploads/$uri $uri @django;
    }

    # server root is at 'media' but the request url would contain the 'media/foo/bar.png'
    # so we need to map 'media' part of the request to the $media_root
    location /media/ {
        root        $django_proj_root;
        access_log  off;
    }
    location ^~ /media/uploads/ {
        root        $django_proj_root;
        access_log  off;
        expires     1y;
    }
    # set maximum in-the-future expire date for processed unique static assets
    location ~* "^/media/static/.+\.[0-9a-f]{12}\.\w{1,}$" {
        root        $django_proj_root;
        access_log  off;
        expires     max;
        gzip_static on;
    }
}
